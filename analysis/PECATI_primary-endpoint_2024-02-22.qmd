---
title: "PECATI Primary Endpoint Analysis "
format:
  html:
    code-fold: true
    toc: true
    number-sections: true
editor: source
output-dir: "../docs"
---

```{r, include = FALSE}
library(tidyverse)
library(readxl)
library(writexl)
library(janitor)
library(lubridate)
library(here)
library(cowplot)
library(gt)
library(gtsummary)
library(gtreg)
library(survival)
library(survminer)
library(epoxy)
library(crayon)
library(grid)
library(workflowr)
library(broom)

here("WP1_preliminary-analysis.Rmd")

# Define parameters for project ID and cutoff date
project_id <- "PECATI"
cutoff_date <- as.Date("2024-02-09")

# Define function to generate file paths dynamically
generate_file_path <- function(project_id, cutoff_date, file_type) {
  here::here("data", as.character(cutoff_date), paste0(project_id, "_", file_type, "_", format(cutoff_date, "%Y_%m_%d"), ".xlsx"))
}
```

The data cutoff date for these analyses is: `r cutoff_date`

# Patient Disposition

## Screening

```{r, message = FALSE, warning = FALSE, echo = FALSE, include = FALSE}
data_00_screening <- read_excel(
  generate_file_path(project_id, cutoff_date, "ICF Screening"),
  sheet = "ICF Screening",
  skip = 1
) %>%
  clean_names()


# Print column names, excluding any columns that start with "inclusion_" or "exclusion_"
data_00_screening %>%
  select(-starts_with("inclusion_"), -starts_with("exclusion_")) %>%
  names()
```

<!-- ### Under development --------------------------------------------------->

```{r}
# # Define a function to clean and process screening data
# process_screening_data <- function(data) {
#   rename_list <- list(
#     patient = "patient",
#     screening_date = "visit_date",
#     eligible = "is_the_patient_eligible_to_participate_in_the_study",
#     sf_date = "non_eligible_date",
#     sf_reason = "reason_not_eligible",
#     eligibility_date_1 = "eligibility_date_v2",
#     eligibility_date_2 = "eligibility_date_v3"
#   )
# 
#   # Perform standard data processing steps
#   data <- data %>%
#     rename(!!!rename_list) %>%
#     mutate_at(vars(starts_with("eligibility_date")), dmy) %>%
#     mutate(
#       eligibility_date = if_else(
#         eligible == "Yes" & !is.na(eligibility_date_1), eligibility_date_1, eligibility_date_2
#       ),
#       eligibility_date = ymd(eligibility_date),
#       sf_date = dmy(sf_date),
#       sf_reason = if_else(is.na(eligible), "Unknown", sf_reason),
#       screening_date = dmy(screening_date)
#     ) %>%
#     select(patient, screening_date, eligible, sf_date, sf_reason, eligibility_date)
#   
#   return(data)
# }
# 
# # Process screening data
# data_00_screening <- process_screening_data(data_00_screening)
# 
# # Manual modifications
# data_00_screening$eligible[data_00_screening$patient %in% c("0301-014", "0301-012")] <- "Yes"
# data_00_screening$eligibility_date[data_00_screening$patient == "0301-014"] <- data_00_screening$screening_date[data_00_screening$patient == "0301-014"]
```

<!-- ### Under development --------------------------------------------------->

```{r, message = FALSE, warning = FALSE, echo = FALSE}
rename_list <- list(
  patient = "patient",
  screening_date = "visit_date",
  eligible = "is_the_patient_eligible_to_participate_in_the_study",
  sf_date = "non_eligible_date",
  sf_reason = "reason_not_eligible",
  eligibility_date_1 = "eligibility_date_v2",
  eligibility_date_2 = "eligibility_date_v3"
)

data_00_screening <- data_00_screening %>%
  rename(
    !!!rename_list
  ) %>%
  mutate_at(
    vars(starts_with("eligibility_date")), dmy
  ) %>%
  mutate(
    eligibility_date = if_else(
      eligible == "Yes" & !is.na(eligibility_date_1), eligibility_date_1, eligibility_date_2
    ),
    eligibility_date = ymd(eligibility_date),
    sf_date = dmy(sf_date),
    ### Manual fixes ### ------------------------------------------------------
    eligible = if_else(
      patient == "0301-014", "Yes", eligible
    ),
    eligible = if_else(
      patient == "0301-012", "Yes", eligible
    ),
    ### -----------------------------------------------------------------------
    sf_reason = if_else(
      is.na(eligible), "Unknown", sf_reason
    ),
    screening_date = dmy(screening_date)
  ) %>%
  select(
    patient, screening_date, eligible, sf_date, sf_reason, eligibility_date
  )

### Manual fix ### ------------------------------------------------------------
# Change eligibility_date for patient 0301-014 to screening_date
data_00_screening$eligibility_date[which(data_00_screening$patient == "0301-014")] <- data_00_screening$screening_date[which(data_00_screening$patient == "0301-014")]
```

```{r, message = FALSE, warning = FALSE, echo = FALSE}
screening_n <- length(data_00_screening$patient)
```

Listing of patients who have undergone the screening phase (n = `r screening_n`):

```{r, message = FALSE, warning = FALSE, echo = FALSE}
listing1_formatted_names <- c(
  "Patient",
  "Date of screening visit",
  "Eligible patient?",
  "Date of screening failure",
  "Reason for screening failure",
  "Date of confirmation of eligibility"
)

data_00_screening_formatted <- data_00_screening %>%
  set_names(listing1_formatted_names)

rmarkdown::paged_table(data_00_screening_formatted)
```

#### **Table 1. Patients included, excluded, and reasons for exclusion**

```{r, message = FALSE, warning = FALSE, echo = FALSE}
data_00_screening %>%
  tbl_summary(
    include = c(eligible, sf_reason),
    missing = "no",
    label = list(
      eligible ~ "Included",
      sf_reason ~ "Excluded"
    )
  ) %>%
  modify_header(label = " ") %>%
  bold_labels()
```

## Intention-to-treat population (ITT)

```{r, message = FALSE, warning = FALSE, echo = FALSE}
data_01_cycles <- read_excel(
  generate_file_path(project_id, cutoff_date, "Cycles"),
  sheet = "Cycles",
  skip = 1
  ) %>%
  clean_names()

data_02_itt <- data_01_cycles %>%
  filter(
    event_num == 1
  ) %>%
  select(patient)

data_temp_itt <- merge(
  data_02_itt,
  data_00_screening,
  by = "patient",
  all = FALSE
) %>%
  select(patient, screening_date, eligibility_date)

itt_n <- length(data_temp_itt$patient)
```

Listing of patients who have started study treatment (n = `r itt_n`):

```{r, message = FALSE, warning = FALSE, echo = FALSE}
listing2_formatted_names <- c(
  "Patient",
  "Date of screening visit",
  "Date of confirmation of eligibility"
)

data_temp_itt_formatted <- data_temp_itt %>%
  set_names(listing2_formatted_names)

rmarkdown::paged_table(data_temp_itt_formatted)
```

## Study treatment discontinuation (EoT)

